💰 Financial Organizer for International Students
A simple and efficient personal finance management application built with Python + PyQt6, designed to help international students keep track of their income and expenses during their time abroad.

✨ Features
✅ Register income and expenses with custom categories
💼 Categorize transactions by type (e.g. Food, Rent, Transport, etc.)
🌍 Currency conversion with predefined fixed rates (e.g. BRL to USD or EUR)
📊 View updated balance and basic financial summaries
📁 Save and load your data locally using JSON or export as CSV
📈 Generate simple reports to understand spending habits
🖥️ Friendly GUI interface with PyQt6
📌 Project Goals
Help exchange students organize their finances simply and offline
Serve as a learning project for:
GUI development using PyQt6
File manipulation (JSON/CSV)
Object-oriented programming
Practical finance application logic
🚀 Getting Started
📦 Prerequisites
Python 3.8 or higher
Install dependencies:
pip install PyQt6
▶️ Run the application
python main.py
🗂️ File Structure
organizador_financeiro/
│
├── main.py                        # Ponto de entrada principal do programa
├── config.py                      # Configurações globais (ex: cores, caminhos de arquivos)
├── database/
│   ├── __init__.py
│   ├── data_manager.py            # Manipulação dos dados (ler, salvar, atualizar)
│   └── data.json                  # Arquivo JSON com os dados (provisório ou fixo)
│
├── ui/
│   ├── __init__.py
│   ├── login_screen.py           # Tela de login
│   ├── dashboard.py              # Tela principal com resumo e gráficos
│   ├── transaction_form.py       # Tela/modal para adicionar transações
│   ├── widgets/                  
│   │   ├── __init__.py
│   │   ├── transaction_card.py   # Componentes reutilizáveis
│   │   └── chart_widget.py       # Gráfico (separado por modularidade)
│
├── logic/
│   ├── __init__.py
│   ├── auth.py                   # Lógica de login (mesmo que seja simples)
│   ├── transactions.py           # Funções para adicionar, editar e filtrar transações
│   └── reports.py                # Geração de relatórios e gráficos
│
├── assets/
│   ├── icons/                    # Ícones
│   └── style.qss                 # Estilo (separado para facilitar manutenção visual)
│
└── README.md                     # Descrição do projeto

🖼️ Screenshots
You can add screenshots here showing the main interface, transaction form, and summary screen.

🛠️ Future Improvements
 Monthly budget limits and alerts
 Visual charts with PyQtGraph or matplotlib
 Cloud sync support
 Multi-language support (EN / PT)
📄 License
🤝 Contributing
Pull requests are welcome! If you find a bug or have a suggestion, feel free to open an issue.

👤 Author
Developed by Rian — Student, designer & developer.

Focused on creating practical and educational solutions for real-world problems.